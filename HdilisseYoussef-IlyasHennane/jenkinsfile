pipeline {
    agent any

    environment {
        // Ajoutez les variables d'environnement nécessaires
        SONAR_TOKEN = 'sqp_7ba3a03f2ec3d0c726d550d96753510229944634'
    }

    stages {

        stage('Clone Repository') {
            steps {
                script {
                    echo "Clonage du dépôt..."
                    git branch: 'master', url: 'https://github.com/Hennane128/mon-app-php.git'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    echo "Installation des dépendances..."
                    bat 'composer install'
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                script {
                    echo "Exécution des tests unitaires..."
                    // Exécutez les tests unitaires avec PHPUnit et générez un rapport XML
                    bat 'vendor\\bin\\phpunit --configuration phpunit.xml --log-junit test-report.xml'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    echo "Analyse du code avec SonarQube..."
                    bat '''
                         sonar-scanner ^
                         -Dsonar.projectKey=pr_sonar ^
                         -Dsonar.sources=. ^
                         -Dsonar.host.url=http://localhost:9000 ^
                         -Dsonar.login="sqp_7ba3a03f2ec3d0c726d550d96753510229944634"
                        '''
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo "Déploiement de l'application..."
                    // Ajouter vos étapes de déploiement ici
                }
            }
        }

    }

    post {
        always {
            // Publier les résultats des tests unitaires après chaque exécution
            junit 'test-report.xml'
        }
        success {
            script {
                echo "Pipeline exécuté avec succès !"
            }
        }
        failure {
            script {
                echo "Le pipeline a échoué."
            }
        }
    }
}